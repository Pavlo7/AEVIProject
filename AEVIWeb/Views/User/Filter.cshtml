@model AEVIWeb.Models.UserModelsViewParam

@{
    ViewBag.Title = "Filter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Set the filter of data</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@{
    List<SelectListItem> listItemsPermission = new List<SelectListItem>();
    listItemsPermission.Add(new SelectListItem
    {
        Text = null,
        Value = null,
        Selected = true
    });
    if (ViewData["PM"] == "0")
    {
    listItemsPermission.Add(new SelectListItem
    {
        Text = "PREMIUM",
        Value = "PREMIUM"
    });
    }
    listItemsPermission.Add(new SelectListItem
    {
        Text = "STANDART",
        Value = "STANDART",
        
    });
}
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label"><span style="float: left"><strong>
            @Html.LabelFor(model => model.UserName)&nbsp
        </strong></span></div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            @Html.LabelFor(model => model.Email)&nbsp
        </strong></span></div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            @Html.LabelFor(model => model.Permission)&nbsp
        </strong></span></div>
        <div class="editor-field">
             @Html.DropDownListFor(model => model.Permission, listItemsPermission)
            @Html.ValidationMessageFor(model => model.Permission)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            @Html.LabelFor(model => model.Condition)&nbsp
        </strong></span></div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Condition, new[] 
            {new SelectListItem() {Text = null, Value =null}, 
             new SelectListItem() { Text = "Active", Value = "Active" },
             new SelectListItem() { Text = "Blocked", Value = "Blocked" },  
           new SelectListItem() { Text = "Deleted", Value = "Deleted" } })
            @Html.ValidationMessageFor(model => model.Condition)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            @Html.LabelFor(model => model.Login)&nbsp
        </strong></span></div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Login)
            @Html.ValidationMessageFor(model => model.Login)
        </div>

       
         <div class="editor-field"><span style="float: left">
            @Html.CheckBoxFor(model => model.IsAll)
            @Html.ValidationMessageFor(model => model.IsAll)
        </span></div>
        <div class="editor-label"><strong>
            @Html.LabelFor(model => model.IsAll)
        </strong></div>

       
    </fieldset>
    
    <p><input type="submit" value="Save" /> </p>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

