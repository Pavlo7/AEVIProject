@model AEVIWeb.Models.UserModels

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit user</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@{
    List<SelectListItem> listItemsPermission = new List<SelectListItem>();
    if (ViewData["PM"] == "0")
    {
    listItemsPermission.Add(new SelectListItem
    {
        Text = "PREMIUM",
        Value = "PREMIUM"
    });
    }
    listItemsPermission.Add(new SelectListItem
    {
        Text = "STANDART",
        Value = "STANDART",
        Selected = true
    });

    List<SelectListItem> listItemsCondition = new List<SelectListItem>();
    listItemsCondition.Add(new SelectListItem
    {
        Text = "Blocked",
        Value = "Blocked"
        
    });
    listItemsCondition.Add(new SelectListItem
    {
        Text = "Active",
        Value = "Active",
        Selected = true
    });
 }


@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
          @Html.Hidden("UserId", Model.UserId)
        <div class="editor-label"><span style="float: left"><strong>
            *@Html.LabelFor(model => model.UserName)&nbsp</strong></span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            *@Html.LabelFor(model => model.Email)&nbsp</strong></span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            *@Html.LabelFor(model => model.Permission)&nbsp</strong></span>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Permission, listItemsPermission)
            @Html.ValidationMessageFor(model => model.Permission)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            *@Html.LabelFor(model => model.Condition)&nbsp</strong></span>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Condition, listItemsCondition)
            @Html.ValidationMessageFor(model => model.Condition)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            @Html.LabelFor(model => model.Comments)&nbsp</strong></span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comments)
            @Html.ValidationMessageFor(model => model.Comments)
        </div>

        <div class="editor-label"><span style="float: left"><strong>
            *@Html.LabelFor(model => model.Login)&nbsp</strong></span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Login)
            @Html.ValidationMessageFor(model => model.Login)
        </div>

       &nbsp
         <div><span style="Font-family: Cursive">* - The field is required.</span></div> 
        <div><span style="Font-family: Cursive">** - The field must be at least 6 characters long.</span></div> 
        <div><span style="Font-family: Cursive">*** - All fields dosen't contain following characters: `, ", -- .</span></div>
    </fieldset>
    
     <p>
            <input type="submit" value="Save" />
     </p>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

